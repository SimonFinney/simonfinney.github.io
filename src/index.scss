///
// Copyright Simon Finney 2019, 2022
///

@use 'sass:color';
@use 'sass:map';
@use 'sass:math';

@import 'the-new-css-reset/css/reset.css';

$color--accent: #f6c97c;
$color--background: #0f1219;
$color--text: #a7aeca;

@function z-index($name) {
  @return map.get($map: $z-indexes, $key: $name);
}

@function rem($px) {
  @return math.div($number1: $px, $number2: 16) * 1rem;
}

@function units($count) {
  @return rem($px: 8) * $count;
}

@mixin breakpoint {
  @media (min-width: units($count: 96)) {
    @content;
  }
}

@mixin type($name) {
  $type: map.get(
    $map: $styles--type,
    $key: $name,
  );

  $font-size: map.get(
    $map: $type,
    $key: font-size,
  );

  @each $property, $value in $type {
    #{$property}: $value;
  }
}

$z-indexes: (
  header: 9999,
  hidden: -1,
);

$sizing--border: units(
  $count: 0.125,
);

$styles--type: (
  body: (
    font-size:
      rem(
        $px: 14,
      ),
    letter-spacing:
      rem(
        $px: 0.1,
      ),
    line-height: 1.5,
  ),
  heading-01: (
    font-size:
      rem(
        $px: 16,
      ),
    line-height: 1.375,
  ),
  heading-02: (
    font-size:
      rem(
        $px: 20,
      ),
    line-height: 1.3,
  ),
  heading-03: (
    font-size:
      rem(
        $px: 54,
      ),
    line-height: 1.19,
  ),
);

body {
  $body__spacing: units(
    $count: 2,
  );

  @include type($name: body);

  max-width: units($count: 128);
  margin-inline-end: auto;
  margin-inline-start: auto;
  padding-inline-end: $body__spacing;
  padding-inline-start: $body__spacing;
  font-family: 'Fira Sans', sans-serif;
  color: $color--text;
  background-color: $color--background;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

header,
footer {
  $navigation__spacing: units(
    $count: 2,
  );

  display: flex;
  position: sticky;
  padding-block-start: $navigation__spacing;
  padding-block-end: $navigation__spacing;
  background-color: $color--background;
  align-items: center;
}

header {
  inset-block-start: 0;
  z-index: z-index($name: header);
}

h1,
h2,
h3,
h4 {
  font-family: 'JetBrains Mono', monospace;
}

h1,
h4,
.a--active {
  font-weight: bold;
}

h1,
h4 {
  @include breakpoint {
    @include type($name: heading-01);
  }
}

.role {
  font-weight: normal;
}

nav {
  margin-inline-start: auto;

  li {
    display: inline;

    &:not(:first-of-type) {
      margin-inline-start: units($count: 2);
    }
  }
}

a {
  position: relative;
  text-decoration: none;
  color: inherit;

  &::before {
    position: absolute;
    inset-block-start: 0;
    inset-block-end: 0;
    inset-inline-start: 0;
    z-index: z-index($name: hidden);
    inline-size: 0;
    background-color: color.adjust($color: $color--background, $lightness: -5%);
    content: '';
    transition: 0.3s inline-size;
  }

  &:focus,
  &:hover {
    &::before {
      inline-size: 100%;
    }
  }

  &:focus {
    outline: $sizing--border solid $color--accent;
    outline-offset: -$sizing--border;
  }
}

.hero {
  $hero__spacing: 20vh;

  padding-block-start: $hero__spacing;
  padding-block-end: $hero__spacing;
}

h2,
h3,
.description {
  $heading__spacing: units(
    $count: 1,
  );

  margin-block-start: $heading__spacing;
  margin-block-end: $heading__spacing;
}

h2,
h3 {
  @include type($name: heading-02);
}

h2 {
  @include breakpoint {
    @include type($name: heading-03);
  }
}

.display {
  &--odd {
    color: #bd9be3;
  }

  &--even {
    color: $color--accent;
  }
}

.description {
  max-inline-size: units($count: 96);

  @include breakpoint {
    @include type($name: heading-02);
  }
}

.features {
  display: grid;
  grid-gap: units($count: 1);

  @include breakpoint {
    grid-template-columns: repeat(3, 1fr);
  }
}

.feature {
  display: flex;
  flex-wrap: wrap;

  &::after {
    position: absolute;
    inset: 0;
    z-index: z-index($name: hidden) - 1;
    background-color: color.adjust(
      $color: $color--background,
      $lightness: -2.5%
    );
    content: '';
  }

  &__image {
    inline-size: 100%;
    block-size: units($count: 25);
    object-fit: cover;
  }

  &__content {
    padding: units($count: 4);
  }

  &__icon {
    $icon__spacing: units(
      $count: 2,
    );

    margin: auto $icon__spacing $icon__spacing auto;
    fill: currentColor;
  }
}

h4 {
  margin-block-end: units($count: 1);
}

footer {
  inset-block-end: 0;
  border-block-start: $sizing--border solid
    color.adjust($color: $color--background, $lightness: 5%);
}
